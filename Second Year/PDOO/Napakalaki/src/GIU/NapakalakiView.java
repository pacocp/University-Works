/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GIU;

import NapakalakiGame.Napakalaki;
import NapakalakiGame.Player;
import NapakalakiGame.Prize;
import NapakalakiGame.BadConsequence;
import NapakalakiGame.CombatResult;
import NapakalakiGame.Treasure;
import java.util.ArrayList;
import javax.swing.JPanel;
import NapakalakiGame.Monster;
import javax.swing.JOptionPane;

/**
 *
 * @author paco
 */
public class NapakalakiView extends javax.swing.JFrame {

    /**
     * Creates new form NapakalakiView
     */
       Napakalaki napakalakiModel;
    public NapakalakiView() {
        initComponents();
        monsterView1.setVisible(false);
        Combat.setEnabled(false);
        textocombate.setVisible(false);
        nextturn.setEnabled(false);
       
    }
    public  void setNapakalaki(Napakalaki n)
    {
        napakalakiModel = n;
        playerView1.setPlayer(n.getCurrentPlayer());
        playerView1.setNapakalaki(n);
        monsterView1.setMonster(n.getCurrentMonster());
        repaint();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        meetthemonster = new javax.swing.JButton();
        Combat = new javax.swing.JButton();
        nextturn = new javax.swing.JButton();
        textocombate = new javax.swing.JLabel();
        monsterView1 = new GIU.MonsterView();
        playerView1 = new GIU.PlayerView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        meetthemonster.setText("Meet the monster");
        meetthemonster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                meetthemonsterActionPerformed(evt);
            }
        });

        Combat.setText("Combat");
        Combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombatActionPerformed(evt);
            }
        });

        nextturn.setText("Next Turn");
        nextturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextturnActionPerformed(evt);
            }
        });

        textocombate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        textocombate.setText("Resultado del combate");
        textocombate.setAutoscrolls(true);

        monsterView1.setMaximumSize(new java.awt.Dimension(731, 217));
        monsterView1.setMinimumSize(new java.awt.Dimension(731, 217));

        playerView1.setMaximumSize(new java.awt.Dimension(1310, 694));
        playerView1.setMinimumSize(new java.awt.Dimension(1310, 694));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textocombate, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(Combat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(meetthemonster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(nextturn, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(181, 181, 181)
                        .addComponent(monsterView1, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(playerView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monsterView1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(meetthemonster)
                        .addGap(18, 18, 18)
                        .addComponent(Combat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textocombate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextturn)))
                .addGap(18, 18, 18)
                .addComponent(playerView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextturnActionPerformed
        // TODO add your handling code here:
        if(!napakalakiModel.nextTurn())//Como ya lo hago aquí no hace falta que lo haga en el else
        {
            JOptionPane.showMessageDialog(null,"No cumples las condiciones para pasar de turno"
                    + "O bien tienes más de 4 tesoros visibles, o bien te queda mal rollo por cumplir");
            
        }
        else
        {
            Combat.setEnabled(true);
            textocombate.setVisible(false);
            nextturn.setEnabled(false);
            meetthemonster.setEnabled(true);
            playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
            monsterView1.setMonster(napakalakiModel.getCurrentMonster());
            monsterView1.setVisible(false);
          
        }
        
    }//GEN-LAST:event_nextturnActionPerformed

    private void CombatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombatActionPerformed
        // TODO add your handling code here:
        CombatResult combatresult = napakalakiModel.developCombat();
        switch(combatresult)
        {
            case WinAndWinGame:
                                textocombate.setText("HAS GANADO LA PARTIDA!!!");
                                break;
            case Win:
                                textocombate.setText("Has ganado el combate!");
                                playerView1.showPendingBadConsequence();
                               
                                break;
            case Lose:
                                textocombate.setText("Has perdido el combate :(");
                                break;
            case LoseAndEscape:
                                textocombate.setText("Has perdido el combate, pero has escapado");
                                break;
            case LoseAndDie:
                                textocombate.setText("Has perdido el combate y has muerto :(");
                                break;

        }
        if(combatresult == CombatResult.WinAndWinGame){
            JOptionPane.showMessageDialog(null,"¡¡¡ H A S   G A N A D O   L A   P A R T I D A !!!");
            System.exit(0);
        }
        textocombate.setVisible(true);
        Combat.setEnabled(false);
        nextturn.setEnabled(true);
        playerView1.setEnableBuyLevels();
        playerView1.setEnableDiscardTreasures();
        playerView1.setEnableMakeVisible();
        //EXAMEN
        playerView1.setEnablechangeTreasure();
        //FIN EXAMEN
        playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
        repaint();
                
    }//GEN-LAST:event_CombatActionPerformed

    private void meetthemonsterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_meetthemonsterActionPerformed
        // TODO add your handling code here:
        monsterView1.setMonster(napakalakiModel.getCurrentMonster());
        monsterView1.setVisible(true);
        
        Combat.setEnabled(true);
        meetthemonster.setEnabled(false);
        playerView1.setnoEnableBuyLevels();
        playerView1.setnoEnableDiscardTreasures();
        playerView1.setnoEnableMakeVisible();
        //EXAMEN
        playerView1.setNoEnablechangeTreasure();
        //FIN EXAMEN
        
        
    }//GEN-LAST:event_meetthemonsterActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(NapakalakiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(NapakalakiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(NapakalakiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(NapakalakiView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new NapakalakiView().setVisible(true);
//            }
//        }); 
//    }
//
    public void showView() {
    this.setVisible(true);
    playerView1.setVisible(true);
     nextturn.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Combat;
    private javax.swing.JButton meetthemonster;
    private GIU.MonsterView monsterView1;
    private javax.swing.JButton nextturn;
    private GIU.PlayerView playerView1;
    private javax.swing.JLabel textocombate;
    // End of variables declaration//GEN-END:variables
}
