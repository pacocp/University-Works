/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GIU;

import NapakalakiGame.Player;
import NapakalakiGame.Napakalaki;
import NapakalakiGame.Treasure;
import java.util.ArrayList;
import java.awt.Component;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author paco
 */
public class PlayerView extends javax.swing.JPanel {
    Player playerModel;
    private Napakalaki napakalakiModel;
    //public NapakalakiView napakalakiView;
        
   public void setNapakalaki(Napakalaki model/*, NapakalakiView view*/) {

        this.napakalakiModel = model;
        //this.napakalakiView = view;
        repaint();
               
        
    }
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
        DiscardTreasures.setEnabled(false);
    }
    public void setPlayer(Player p)
    {
        playerModel = p;
        Nombre.setText("Nombre: " + playerModel.getName());
        Nivel.setText( "Nivel: " + Integer.toString(playerModel.getLevels()));
        Estado.setText( "Estado: " + Boolean.toString(playerModel.getDeath()));
        niveldecombate.setText("Nivel de combate: " + Integer.toString(playerModel.getCombatLevel()));
        fillTreasurePanel (VisibleTreasures, playerModel.getVisibleTreasures());
        fillTreasurePanel (HiddenTreasures, playerModel.getHiddenTreasures());
        cultistView1.setCultist(p);
        repaint();
        revalidate();

    }
    public void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
        // Se elimina la informaci칩n antigua
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y a침adiendo sus vistas
        //al panel
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
           }
        // Se fuerza la actualizaci칩n visual del panel
        aPanel.repaint();
        aPanel.revalidate();
}

    public ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
    // Se recorren los tesoros que contiene el panel,
    // almacenando en un vector aquellos que est치n seleccionados.
    // Finalmente se devuelve dicho vector.
    TreasureView tv;
    ArrayList<Treasure> output = new ArrayList();
    for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
            output.add ( tv.getTreasure() );
            }
    return output;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Nombre = new javax.swing.JLabel();
        Nivel = new javax.swing.JLabel();
        Estado = new javax.swing.JLabel();
        PendingBadConsequence = new javax.swing.JLabel();
        BuyLevels = new javax.swing.JButton();
        DiscardTreasures = new javax.swing.JButton();
        MakeVisible = new javax.swing.JButton();
        niveldecombate = new javax.swing.JLabel();
        cultistView1 = new GIU.CultistView();
        VisibleTreasures = new javax.swing.JPanel();
        HiddenTreasures = new javax.swing.JPanel();
        changeTreasure = new javax.swing.JButton();

        setAutoscrolls(true);
        setInheritsPopupMenu(true);
        setMaximumSize(null);

        Nombre.setText("Nombre");

        Nivel.setText("Nivel");

        Estado.setText("Estado");

        BuyLevels.setText("BuyLevels");
        BuyLevels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyLevelsActionPerformed(evt);
            }
        });

        DiscardTreasures.setText("DiscardTreasures");
        DiscardTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiscardTreasuresActionPerformed(evt);
            }
        });

        MakeVisible.setText("Make Visible");
        MakeVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeVisibleActionPerformed(evt);
            }
        });

        niveldecombate.setText("Nivel de combate");

        VisibleTreasures.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 255), 4, true));

        HiddenTreasures.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 255), 4, true));

        changeTreasure.setText("Change Treasure");
        changeTreasure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeTreasureActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(niveldecombate)
                            .addComponent(Nivel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Estado, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(PendingBadConsequence, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                        .addComponent(cultistView1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(VisibleTreasures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HiddenTreasures, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(MakeVisible, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(BuyLevels, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DiscardTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(changeTreasure, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Nombre)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Nivel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Estado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(niveldecombate))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(PendingBadConsequence, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(cultistView1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VisibleTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(HiddenTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MakeVisible)
                            .addComponent(BuyLevels))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DiscardTreasures)
                            .addComponent(changeTreasure))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void MakeVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeVisibleActionPerformed
        // TODO add your handling code here:
        ArrayList<Treasure> selHidden = getSelectedTreasures(HiddenTreasures);
        napakalakiModel.makeTreasuresVisible (selHidden);
        setPlayer(napakalakiModel.getCurrentPlayer());
        this.repaint();
    }//GEN-LAST:event_MakeVisibleActionPerformed

    private void DiscardTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiscardTreasuresActionPerformed
        // TODO add your handling code here:
        ArrayList<Treasure> selVis = getSelectedTreasures(VisibleTreasures);
        ArrayList<Treasure> selHid = getSelectedTreasures(HiddenTreasures);
        napakalakiModel.discardVisibleTreasures(selVis);
        napakalakiModel.discardVisibleTreasures(selHid);
        setPlayer(napakalakiModel.getCurrentPlayer());
         this.repaint();
         
        
    }//GEN-LAST:event_DiscardTreasuresActionPerformed

    private void BuyLevelsActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
       // private void BuyLevelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuyLevelsActionPerformed

        ArrayList<Treasure> selVisible = getSelectedTreasures(VisibleTreasures);
        ArrayList<Treasure> selHidden = getSelectedTreasures(HiddenTreasures);
        

        this.napakalakiModel.buyLevels(selVisible, selHidden);

        setPlayer(napakalakiModel.getCurrentPlayer());

        this.repaint();
        
       // napakalakiView.checkPendingBadStuff();

    }//GEN-LAST:event_btBuyLevelsActionPerformed
    //EXAMEN
    private void changeTreasureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeTreasureActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures(HiddenTreasures);
        playerModel.changeTreasure(selHidden.get(0));
        
        setPlayer(napakalakiModel.getCurrentPlayer());
        this.repaint();
        
    }//GEN-LAST:event_changeTreasureActionPerformed
    //FIN EXAMEN

    //Pone el bot칩n a false
    public void setnoEnableBuyLevels()
    {
        BuyLevels.setEnabled(false);
    }
    //EXAMEN
    public void setNoEnablechangeTreasure()
    {
        changeTreasure.setEnabled(false);
    }
    //FIN EXAMEN
    public void setnoEnableDiscardTreasures()
    {
        DiscardTreasures.setEnabled(false);
    }
    
    public void setnoEnableMakeVisible()
    {
        MakeVisible.setEnabled(false);
    }
    
    //Pone el bot칩n a true
    public void setEnableBuyLevels()
    {
        BuyLevels.setEnabled(true);
    }
    
    public void setEnableDiscardTreasures()
    {
        DiscardTreasures.setEnabled(true);
    }
    
    public void setEnableMakeVisible()
    {
        MakeVisible.setEnabled(true);
    }
    //EXAMEN
    public void setEnablechangeTreasure()
    {
        changeTreasure.setEnabled(true);
    }
    //FIN EXAMEN
    public void showPendingBadConsequence()
    {
        PendingBadConsequence.setText(playerModel.getPendingBadConsequence().getText());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuyLevels;
    private javax.swing.JButton DiscardTreasures;
    private javax.swing.JLabel Estado;
    private javax.swing.JPanel HiddenTreasures;
    private javax.swing.JButton MakeVisible;
    private javax.swing.JLabel Nivel;
    private javax.swing.JLabel Nombre;
    private javax.swing.JLabel PendingBadConsequence;
    private javax.swing.JPanel VisibleTreasures;
    private javax.swing.JButton changeTreasure;
    private GIU.CultistView cultistView1;
    private javax.swing.JLabel niveldecombate;
    // End of variables declaration//GEN-END:variables
}
